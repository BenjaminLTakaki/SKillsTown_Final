{
    "categories": [
        {
            "name": "Programming Languages",
            "courses": [
                {
                    "name": "Python for Beginners",
                    "description": "Learn Python programming from scratch with hands-on projects and real-world applications. This comprehensive course covers Python fundamentals including variables, data types, control structures, functions, and object-oriented programming. Students will build practical projects including a calculator, web scraper, and data analysis tool. The course includes modules on file handling, exception handling, and working with popular libraries like requests and pandas. Perfect for complete beginners with no programming experience.",
                    "duration": "8 weeks",
                    "level": "Beginner",
                    "skills": ["Python basics", "Object-oriented programming", "File handling", "Web scraping", "Data manipulation", "Error handling", "Library usage"],
                    "projects": ["Personal calculator", "Weather app", "Web scraper", "Data analysis dashboard", "File organizer tool"],
                    "career_paths": ["Software Developer", "Data Analyst", "Backend Developer", "Automation Engineer", "Python Developer"],
                    "learning_objectives": [
                        "Write Python programs using proper syntax and semantics",
                        "Implement object-oriented programming concepts including classes and inheritance",
                        "Handle file operations and implement robust exception handling",
                        "Build practical applications using Python libraries like requests and pandas",
                        "Debug Python code effectively and apply best coding practices",
                        "Create automated scripts for data manipulation and web scraping"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["variables", "data_types", "basic_operators", "control_structures", "basic_functions"],
                            "percentage": 45
                        },
                        "intermediate": {
                            "topics": ["object_oriented_programming", "file_handling", "error_handling", "library_usage"],
                            "percentage": 40
                        },
                        "advanced": {
                            "topics": ["web_scraping", "data_manipulation", "advanced_projects"],
                            "percentage": 15
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Python Syntax and Fundamentals",
                            "weight": 0.35,
                            "topics": ["variables", "data_types", "operators", "control_structures", "functions"]
                        },
                        {
                            "area": "Object-Oriented Programming",
                            "weight": 0.25,
                            "topics": ["classes", "objects", "inheritance", "encapsulation", "methods"]
                        },
                        {
                            "area": "Practical Application Development",
                            "weight": 0.4,
                            "topics": ["file_handling", "libraries", "web_scraping", "data_manipulation", "project_building"]
                        }
                    ],
                    "prerequisites": [],
                    "assessment_focus": {
                        "conceptual": 0.3,
                        "practical": 0.5,
                        "problem_solving": 0.2
                    }
                },
                {
                    "name": "Advanced Python Development",
                    "description": "Master advanced Python concepts including decorators, generators, context managers, metaclasses, and async programming. This course dives deep into Python's advanced features and best practices for professional development. Students learn about design patterns, performance optimization, testing strategies with pytest, and building scalable applications. The course covers advanced topics like multiprocessing, threading, memory management, and creating Python packages. Includes practical projects building REST APIs, concurrent applications, and deploying to production.",
                    "duration": "10 weeks",
                    "level": "Advanced",
                    "skills": ["Decorators", "Generators", "Async programming", "Design patterns", "Performance optimization", "Testing with pytest", "Package development", "Concurrency"],
                    "projects": ["REST API with FastAPI", "Async web scraper", "Performance monitoring tool", "Python package distribution", "Microservice architecture"],
                    "career_paths": ["Senior Python Developer", "Backend Architect", "DevOps Engineer", "Technical Lead", "Software Architect"],
                    "learning_objectives": [
                        "Implement advanced Python features like decorators, generators, and context managers",
                        "Design and implement scalable applications using appropriate design patterns",
                        "Optimize Python code performance using profiling and optimization techniques",
                        "Build concurrent and asynchronous applications using threading and async/await",
                        "Create comprehensive test suites using pytest and advanced testing strategies",
                        "Develop and distribute Python packages following best practices"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["decorators", "generators", "context_managers"],
                            "percentage": 25
                        },
                        "intermediate": {
                            "topics": ["design_patterns", "async_programming", "testing", "performance_optimization"],
                            "percentage": 45
                        },
                        "advanced": {
                            "topics": ["metaclasses", "concurrency", "package_development", "microservices"],
                            "percentage": 30
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Advanced Language Features",
                            "weight": 0.3,
                            "topics": ["decorators", "generators", "context_managers", "metaclasses", "descriptors"]
                        },
                        {
                            "area": "Software Architecture and Patterns",
                            "weight": 0.25,
                            "topics": ["design_patterns", "solid_principles", "architectural_patterns", "code_organization"]
                        },
                        {
                            "area": "Performance and Concurrency",
                            "weight": 0.25,
                            "topics": ["performance_optimization", "async_programming", "threading", "multiprocessing", "memory_management"]
                        },
                        {
                            "area": "Professional Development Practices",
                            "weight": 0.2,
                            "topics": ["testing", "package_development", "documentation", "deployment", "ci_cd"]
                        }
                    ],
                    "prerequisites": ["Python for Beginners", "Basic understanding of OOP concepts"],
                    "assessment_focus": {
                        "conceptual": 0.4,
                        "practical": 0.4,
                        "problem_solving": 0.2
                    }
                },
                {
                    "name": "JavaScript Fundamentals",
                    "description": "Build interactive web applications with JavaScript, covering ES6+ features and modern practices. This course starts with JavaScript basics and progresses to advanced concepts like closures, prototypes, and asynchronous programming. Students learn DOM manipulation, event handling, AJAX, and modern JavaScript features including arrow functions, destructuring, promises, and async/await. The course includes practical projects building interactive websites, browser games, and connecting to APIs. Also covers debugging techniques, performance optimization, and testing with Jest.",
                    "duration": "9 weeks",
                    "level": "Beginner to Intermediate",
                    "skills": ["JavaScript fundamentals", "DOM manipulation", "ES6+ features", "Async programming", "API integration", "Testing with Jest", "Browser APIs"],
                    "projects": ["Interactive todo app", "Weather dashboard", "Browser game", "API-driven web app", "Chrome extension"],
                    "career_paths": ["Frontend Developer", "Full-stack Developer", "Web Developer", "JavaScript Engineer", "UI Developer"],
                    "learning_objectives": [
                        "Write modern JavaScript code using ES6+ syntax and features",
                        "Manipulate DOM elements and handle user events effectively",
                        "Implement asynchronous programming using promises and async/await",
                        "Integrate with REST APIs and handle HTTP requests",
                        "Build interactive web applications with proper error handling",
                        "Test JavaScript code using Jest and debugging tools"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["variables", "functions", "arrays", "objects", "basic_dom"],
                            "percentage": 40
                        },
                        "intermediate": {
                            "topics": ["es6_features", "async_programming", "api_integration", "advanced_dom"],
                            "percentage": 45
                        },
                        "advanced": {
                            "topics": ["closures", "prototypes", "advanced_async", "performance_optimization"],
                            "percentage": 15
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Core JavaScript Language",
                            "weight": 0.35,
                            "topics": ["syntax", "data_types", "functions", "objects", "arrays", "es6_features"]
                        },
                        {
                            "area": "DOM and Browser APIs",
                            "weight": 0.3,
                            "topics": ["dom_manipulation", "event_handling", "browser_apis", "local_storage"]
                        },
                        {
                            "area": "Asynchronous Programming",
                            "weight": 0.25,
                            "topics": ["callbacks", "promises", "async_await", "fetch_api", "ajax"]
                        },
                        {
                            "area": "Development Practices",
                            "weight": 0.1,
                            "topics": ["debugging", "testing", "performance", "best_practices"]
                        }
                    ],
                    "prerequisites": ["Basic HTML and CSS knowledge"],
                    "assessment_focus": {
                        "conceptual": 0.3,
                        "practical": 0.5,
                        "problem_solving": 0.2
                    }
                },
                {
                    "name": "Java Programming Complete Course",
                    "description": "Comprehensive Java course covering basics to advanced topics including Spring framework. Starting with Java fundamentals, this course progresses through object-oriented programming, collections, generics, lambda expressions, and stream API. Students learn about multithreading, database connectivity with JDBC, and building enterprise applications with Spring Boot. The course includes modules on testing with JUnit, build tools like Maven, and deployment strategies. Advanced topics cover microservices architecture, Spring Security, and performance tuning.",
                    "duration": "14 weeks",
                    "level": "Beginner to Advanced",
                    "skills": ["Java fundamentals", "Object-oriented programming", "Spring Boot", "Database connectivity", "Microservices", "Testing with JUnit", "Maven/Gradle"],
                    "projects": ["Banking application", "E-commerce backend", "Microservices system", "Spring Boot REST API", "Enterprise web application"],
                    "career_paths": ["Java Developer", "Backend Developer", "Enterprise Developer", "Software Architect", "Spring Developer"],
                    "learning_objectives": [
                        "Master Java syntax, OOP principles, and core language features",
                        "Build enterprise applications using Spring Boot framework",
                        "Implement database connectivity and data persistence with JPA/Hibernate",
                        "Develop RESTful web services and microservices architecture",
                        "Apply testing strategies using JUnit and Mockito frameworks",
                        "Deploy Java applications using build tools and containerization"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["java_syntax", "oop_basics", "collections", "exception_handling"],
                            "percentage": 35
                        },
                        "intermediate": {
                            "topics": ["generics", "streams", "jdbc", "spring_basics", "testing"],
                            "percentage": 40
                        },
                        "advanced": {
                            "topics": ["spring_boot", "microservices", "security", "performance_tuning"],
                            "percentage": 25
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Core Java Programming",
                            "weight": 0.3,
                            "topics": ["syntax", "oop", "collections", "generics", "streams", "lambda_expressions"]
                        },
                        {
                            "area": "Enterprise Development",
                            "weight": 0.35,
                            "topics": ["spring_framework", "spring_boot", "dependency_injection", "aop", "spring_security"]
                        },
                        {
                            "area": "Data Management",
                            "weight": 0.2,
                            "topics": ["jdbc", "jpa", "hibernate", "database_design", "transactions"]
                        },
                        {
                            "area": "Professional Practices",
                            "weight": 0.15,
                            "topics": ["testing", "build_tools", "deployment", "microservices", "performance"]
                        }
                    ],
                    "prerequisites": ["Basic programming concepts"],
                    "assessment_focus": {
                        "conceptual": 0.35,
                        "practical": 0.45,
                        "problem_solving": 0.2
                    }
                },
                {
                    "name": "C# and .NET Development",
                    "description": "Learn C# programming and .NET framework for building Windows and web applications. This comprehensive course covers C# language fundamentals, object-oriented programming, and the .NET ecosystem. Students learn to build desktop applications with WPF, web applications with ASP.NET Core, and APIs with minimal APIs. The course includes modules on Entity Framework for database operations, authentication and authorization, and deploying to Azure. Advanced topics cover async programming, dependency injection, and microservices with .NET.",
                    "duration": "12 weeks",
                    "level": "Beginner to Intermediate",
                    "skills": ["C# programming", "ASP.NET Core", "Entity Framework", "WPF", "Azure deployment", "API development", "LINQ"],
                    "projects": ["Desktop inventory app", "Web-based CRM", "REST API service", "Cloud-deployed application", "Blazor web app"],
                    "career_paths": [".NET Developer", "Full-stack Developer", "Enterprise Developer", "Cloud Developer", "C# Developer"],
                    "learning_objectives": [
                        "Master C# programming language and .NET framework fundamentals",
                        "Build web applications using ASP.NET Core and modern web practices",
                        "Develop desktop applications using WPF and modern UI patterns",
                        "Implement data access using Entity Framework and LINQ",
                        "Create and consume RESTful APIs with proper authentication",
                        "Deploy applications to Azure cloud platform"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["csharp_syntax", "oop", "collections", "linq_basics"],
                            "percentage": 35
                        },
                        "intermediate": {
                            "topics": ["aspnet_core", "entity_framework", "api_development", "wpf"],
                            "percentage": 45
                        },
                        "advanced": {
                            "topics": ["async_programming", "dependency_injection", "azure_deployment", "microservices"],
                            "percentage": 20
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "C# Language and .NET Framework",
                            "weight": 0.3,
                            "topics": ["csharp_syntax", "oop", "generics", "delegates", "linq", "async_await"]
                        },
                        {
                            "area": "Web Development",
                            "weight": 0.35,
                            "topics": ["aspnet_core", "mvc", "web_api", "blazor", "authentication", "authorization"]
                        },
                        {
                            "area": "Data Access and Storage",
                            "weight": 0.2,
                            "topics": ["entity_framework", "sql_server", "migrations", "data_modeling"]
                        },
                        {
                            "area": "Desktop and Cloud",
                            "weight": 0.15,
                            "topics": ["wpf", "azure", "deployment", "dependency_injection"]
                        }
                    ],
                    "prerequisites": ["Basic programming concepts"],
                    "assessment_focus": {
                        "conceptual": 0.3,
                        "practical": 0.5,
                        "problem_solving": 0.2
                    }
                },
                {
                    "name": "Go Programming Language",
                    "description": "Master Go programming for building scalable and efficient backend services. This course teaches Go from the ground up, focusing on its unique features like goroutines, channels, and interfaces. Students learn about Go's type system, error handling patterns, and building concurrent applications. The course covers web development with Go, database integration, testing strategies, and performance optimization. Advanced topics include building microservices, containerization with Docker, and deploying Go applications to production environments.",
                    "duration": "10 weeks",
                    "level": "Intermediate",
                    "skills": ["Go fundamentals", "Concurrency with goroutines", "Web development", "Microservices", "Docker", "Performance optimization", "Testing"],
                    "projects": ["Concurrent web server", "Microservice API", "Real-time chat application", "Containerized deployment", "CLI tool development"],
                    "career_paths": ["Backend Developer", "DevOps Engineer", "System Programmer", "Cloud Engineer", "Go Developer"],
                    "learning_objectives": [
                        "Master Go syntax, type system, and idiomatic programming patterns",
                        "Implement concurrent programs using goroutines and channels effectively",
                        "Build high-performance web services and REST APIs",
                        "Design and implement microservices architecture with Go",
                        "Apply testing strategies and performance optimization techniques",
                        "Deploy Go applications using containerization and cloud platforms"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["go_syntax", "types", "functions", "structs", "interfaces"],
                            "percentage": 30
                        },
                        "intermediate": {
                            "topics": ["goroutines", "channels", "web_development", "testing", "error_handling"],
                            "percentage": 45
                        },
                        "advanced": {
                            "topics": ["microservices", "performance_optimization", "docker", "production_deployment"],
                            "percentage": 25
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Go Language Fundamentals",
                            "weight": 0.25,
                            "topics": ["syntax", "types", "functions", "structs", "interfaces", "packages"]
                        },
                        {
                            "area": "Concurrency and Performance",
                            "weight": 0.35,
                            "topics": ["goroutines", "channels", "sync_package", "performance_optimization", "profiling"]
                        },
                        {
                            "area": "Web Services and APIs",
                            "weight": 0.25,
                            "topics": ["http_package", "rest_apis", "middleware", "database_integration"]
                        },
                        {
                            "area": "Production and Deployment",
                            "weight": 0.15,
                            "topics": ["testing", "docker", "microservices", "deployment", "monitoring"]
                        }
                    ],
                    "prerequisites": ["Basic programming experience", "Understanding of web concepts"],
                    "assessment_focus": {
                        "conceptual": 0.3,
                        "practical": 0.5,
                        "problem_solving": 0.2
                    }
                }
            ]
        },
        {
            "name": "Web Development",
            "courses": [
                {
                    "name": "React Complete Course",
                    "description": "Build modern web applications with React, including hooks, context, and state management. This comprehensive course covers React fundamentals including JSX, components, props, and state. Students learn modern React patterns with hooks like useState, useEffect, useContext, and custom hooks. The course includes state management with Redux Toolkit, routing with React Router, and styling with CSS modules and styled-components. Advanced topics cover performance optimization, testing with React Testing Library, and deployment strategies. Students build multiple projects including a social media app and e-commerce platform.",
                    "duration": "12 weeks",
                    "level": "Beginner to Intermediate",
                    "skills": ["React fundamentals", "Hooks", "State management", "Redux Toolkit", "React Router", "Testing", "Performance optimization", "Styled components"],
                    "projects": ["Personal portfolio", "Todo app with Redux", "Social media dashboard", "E-commerce frontend", "Real-time chat app"],
                    "career_paths": ["Frontend Developer", "React Developer", "Full-stack Developer", "UI Engineer", "Frontend Architect"],
                    "learning_objectives": [
                        "Build modern React applications using functional components and hooks",
                        "Manage application state effectively using React hooks and Redux Toolkit",
                        "Implement client-side routing and navigation with React Router",
                        "Style React components using modern CSS-in-JS and styling solutions",
                        "Test React applications using React Testing Library and Jest",
                        "Optimize React application performance and deploy to production"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["jsx", "components", "props", "state", "basic_hooks"],
                            "percentage": 35
                        },
                        "intermediate": {
                            "topics": ["advanced_hooks", "context", "routing", "state_management", "styling"],
                            "percentage": 45
                        },
                        "advanced": {
                            "topics": ["performance_optimization", "testing", "deployment", "advanced_patterns"],
                            "percentage": 20
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "React Core Concepts",
                            "weight": 0.3,
                            "topics": ["jsx", "components", "props", "state", "lifecycle", "hooks"]
                        },
                        {
                            "area": "State Management and Routing",
                            "weight": 0.25,
                            "topics": ["context", "redux", "react_router", "form_handling"]
                        },
                        {
                            "area": "Styling and UI Development",
                            "weight": 0.2,
                            "topics": ["css_modules", "styled_components", "responsive_design", "ui_libraries"]
                        },
                        {
                            "area": "Testing and Performance",
                            "weight": 0.25,
                            "topics": ["testing_library", "jest", "performance_optimization", "deployment"]
                        }
                    ],
                    "prerequisites": ["JavaScript fundamentals", "HTML/CSS knowledge"],
                    "assessment_focus": {
                        "conceptual": 0.3,
                        "practical": 0.5,
                        "problem_solving": 0.2
                    }
                },
                {
                    "name": "Vue.js for Beginners",
                    "description": "Learn Vue.js framework for building interactive and dynamic user interfaces. This course introduces Vue.js 3 with its composition API, reactive data, computed properties, and component communication. Students learn about Vue Router for single-page applications, Vuex/Pinia for state management, and Vue CLI for project setup. The course covers component lifecycle, custom directives, and integrating with APIs. Practical projects include building a blog platform, task management app, and real-time dashboard. The course also covers testing with Vue Test Utils and deployment strategies.",
                    "duration": "8 weeks",
                    "level": "Beginner",
                    "skills": ["Vue.js fundamentals", "Composition API", "Vue Router", "Vuex/Pinia", "Component development", "API integration", "Testing"],
                    "projects": ["Personal blog", "Task manager", "Weather app", "Real-time dashboard", "Vue.js portfolio"],
                    "career_paths": ["Frontend Developer", "Vue.js Developer", "Web Developer", "UI Developer", "JavaScript Developer"],
                    "learning_objectives": [
                        "Build interactive web applications using Vue.js 3 and Composition API",
                        "Manage component state and implement reactive data patterns",
                        "Create single-page applications with Vue Router navigation",
                        "Implement global state management using Pinia/Vuex",
                        "Integrate Vue applications with REST APIs and external services",
                        "Test Vue components and deploy applications to production"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["vue_basics", "templates", "directives", "data_binding", "methods"],
                            "percentage": 45
                        },
                        "intermediate": {
                            "topics": ["components", "composition_api", "routing", "state_management"],
                            "percentage": 40
                        },
                        "advanced": {
                            "topics": ["custom_directives", "plugins", "testing", "deployment"],
                            "percentage": 15
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Vue.js Core Framework",
                            "weight": 0.4,
                            "topics": ["templates", "directives", "data_binding", "computed_properties", "watchers"]
                        },
                        {
                            "area": "Component Architecture",
                            "weight": 0.3,
                            "topics": ["components", "props", "events", "slots", "composition_api"]
                        },
                        {
                            "area": "Application Architecture",
                            "weight": 0.2,
                            "topics": ["vue_router", "state_management", "api_integration"]
                        },
                        {
                            "area": "Development Workflow",
                            "weight": 0.1,
                            "topics": ["vue_cli", "testing", "deployment", "build_tools"]
                        }
                    ],
                    "prerequisites": ["JavaScript fundamentals", "Basic HTML/CSS"],
                    "assessment_focus": {
                        "conceptual": 0.3,
                        "practical": 0.5,
                        "problem_solving": 0.2
                    }
                },
                {
                    "name": "Angular Development",
                    "description": "Master Angular framework for building enterprise-level single-page applications. This comprehensive course covers Angular fundamentals including TypeScript, components, services, and dependency injection. Students learn about Angular CLI, routing, forms (reactive and template-driven), HTTP client, and state management with NgRx. The course includes testing with Jasmine and Karma, performance optimization, and Progressive Web App development. Advanced topics cover lazy loading, custom directives, pipes, and deploying Angular applications to various platforms.",
                    "duration": "14 weeks",
                    "level": "Intermediate to Advanced",
                    "skills": ["Angular fundamentals", "TypeScript", "Angular CLI", "RxJS", "NgRx", "Testing", "PWA development", "Angular Material"],
                    "projects": ["Task management system", "E-commerce application", "Progressive web app", "Enterprise dashboard", "Angular mobile app"],
                    "career_paths": ["Angular Developer", "Frontend Developer", "Full-stack Developer", "Enterprise Developer", "Technical Lead"],
                    "learning_objectives": [
                        "Build complex single-page applications using Angular framework and TypeScript",
                        "Implement reactive programming patterns using RxJS observables",
                        "Manage application state with NgRx and implement enterprise patterns",
                        "Create responsive applications using Angular Material and PWA features",
                        "Test Angular applications comprehensively using Jasmine and Karma",
                        "Deploy Angular applications to various hosting platforms"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["typescript", "components", "templates", "data_binding", "services"],
                            "percentage": 30
                        },
                        "intermediate": {
                            "topics": ["routing", "forms", "http_client", "rxjs", "dependency_injection"],
                            "percentage": 45
                        },
                        "advanced": {
                            "topics": ["ngrx", "testing", "pwa", "performance_optimization", "deployment"],
                            "percentage": 25
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Angular Core Framework",
                            "weight": 0.35,
                            "topics": ["components", "services", "dependency_injection", "lifecycle_hooks", "templates"]
                        },
                        {
                            "area": "Reactive Programming",
                            "weight": 0.25,
                            "topics": ["rxjs", "observables", "operators", "async_pipe", "reactive_forms"]
                        },
                        {
                            "area": "Application Architecture",
                            "weight": 0.25,
                            "topics": ["routing", "guards", "lazy_loading", "ngrx", "state_management"]
                        },
                        {
                            "area": "Enterprise Features",
                            "weight": 0.15,
                            "topics": ["testing", "i18n", "pwa", "angular_material", "deployment"]
                        }
                    ],
                    "prerequisites": ["JavaScript/TypeScript knowledge", "Web development basics"],
                    "assessment_focus": {
                        "conceptual": 0.4,
                        "practical": 0.4,
                        "problem_solving": 0.2
                    }
                },
                {
                    "name": "Node.js Backend Development",
                    "description": "Build scalable backend services with Node.js, Express, and MongoDB. This course covers Node.js fundamentals including modules, npm, and asynchronous programming. Students learn to build REST APIs with Express.js, implement authentication and authorization, and work with databases using MongoDB and Mongoose. The course includes middleware development, error handling, testing with Jest, and API documentation with Swagger. Advanced topics cover microservices architecture, real-time applications with Socket.io, and deploying to cloud platforms.",
                    "duration": "11 weeks",
                    "level": "Intermediate",
                    "skills": ["Node.js fundamentals", "Express.js", "MongoDB", "REST API development", "Authentication", "Testing", "Socket.io", "Microservices"],
                    "projects": ["REST API service", "Real-time chat backend", "E-commerce API", "Microservices system", "GraphQL API"],
                    "career_paths": ["Backend Developer", "Node.js Developer", "Full-stack Developer", "API Developer", "DevOps Engineer"],
                    "learning_objectives": [
                        "Build scalable backend applications using Node.js and Express.js",
                        "Design and implement RESTful APIs with proper HTTP methods and status codes",
                        "Implement authentication and authorization using JWT and OAuth",
                        "Work with MongoDB and Mongoose for data persistence and modeling",
                        "Build real-time applications using WebSocket and Socket.io",
                        "Deploy Node.js applications to cloud platforms with CI/CD pipelines"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["nodejs_basics", "modules", "npm", "async_programming", "express_basics"],
                            "percentage": 30
                        },
                        "intermediate": {
                            "topics": ["rest_apis", "middleware", "authentication", "database_integration", "testing"],
                            "percentage": 45
                        },
                        "advanced": {
                            "topics": ["microservices", "real_time", "performance", "deployment", "security"],
                            "percentage": 25
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Node.js Core and Express.js",
                            "weight": 0.3,
                            "topics": ["nodejs_runtime", "modules", "express", "middleware", "routing"]
                        },
                        {
                            "area": "API Development",
                            "weight": 0.35,
                            "topics": ["rest_apis", "http_methods", "status_codes", "validation", "documentation"]
                        },
                        {
                            "area": "Data Management and Security",
                            "weight": 0.25,
                            "topics": ["mongodb", "mongoose", "authentication", "authorization", "security_best_practices"]
                        },
                        {
                            "area": "Advanced Backend Concepts",
                            "weight": 0.1,
                            "topics": ["testing", "deployment", "monitoring", "performance_optimization"]
                        }
                    ],
                    "prerequisites": ["JavaScript fundamentals", "Basic web concepts"],
                    "assessment_focus": {
                        "conceptual": 0.3,
                        "practical": 0.5,
                        "problem_solving": 0.2
                    }
                },
                {
                    "name": "Full-Stack Web Development",
                    "description": "Complete full-stack course covering both frontend and backend development. This comprehensive course teaches students to build complete web applications using modern technologies. The frontend covers React or Vue.js, while the backend uses Node.js and Express. Students learn database design with both SQL and NoSQL databases, authentication systems, and deployment strategies. The course includes DevOps practices, version control with Git, and project management methodologies. Students complete multiple full-stack projects from concept to deployment.",
                    "duration": "16 weeks",
                    "level": "Beginner to Intermediate",
                    "skills": ["Frontend frameworks", "Backend development", "Database design", "Authentication", "DevOps", "Git", "Deployment", "Project management"],
                    "projects": ["Personal blog platform", "Social media application", "E-commerce website", "Project management tool", "SaaS application"],
                    "career_paths": ["Full-stack Developer", "Web Developer", "Software Engineer", "Startup CTO", "Technical Consultant"],
                    "learning_objectives": [
                        "Build complete web applications integrating frontend and backend technologies",
                        "Design and implement RESTful APIs with proper authentication and authorization",
                        "Create responsive user interfaces using modern frontend frameworks",
                        "Implement database design and data modeling for web applications",
                        "Deploy applications using modern DevOps practices and cloud platforms",
                        "Manage full-stack projects from conception to production deployment"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["html_css", "javascript_basics", "frontend_framework_basics", "backend_basics"],
                            "percentage": 30
                        },
                        "intermediate": {
                            "topics": ["api_development", "database_integration", "authentication", "state_management"],
                            "percentage": 50
                        },
                        "advanced": {
                            "topics": ["deployment", "devops", "performance_optimization", "scalability"],
                            "percentage": 20
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Frontend Development",
                            "weight": 0.35,
                            "topics": ["react_vue", "state_management", "responsive_design", "user_experience"]
                        },
                        {
                            "area": "Backend Development",
                            "weight": 0.35,
                            "topics": ["nodejs_express", "api_design", "server_architecture", "middleware"]
                        },
                        {
                            "area": "Data Management",
                            "weight": 0.2,
                            "topics": ["database_design", "sql_nosql", "data_modeling", "orm"]
                        },
                        {
                            "area": "DevOps and Deployment",
                            "weight": 0.1,
                            "topics": ["version_control", "deployment", "ci_cd", "monitoring"]
                        }
                    ],
                    "prerequisites": ["Basic programming knowledge", "HTML/CSS fundamentals"],
                    "assessment_focus": {
                        "conceptual": 0.25,
                        "practical": 0.6,
                        "problem_solving": 0.15
                    }
                },
                {
                    "name": "HTML5 & CSS3 Masterclass",
                    "description": "Master modern HTML5 and CSS3 techniques including Flexbox and Grid layouts. This course covers semantic HTML5 elements, accessibility best practices, and modern CSS features. Students learn responsive design principles, CSS Grid, Flexbox, animations, and transitions. The course includes CSS preprocessors like Sass, CSS frameworks, and modern layout techniques. Advanced topics cover CSS custom properties, performance optimization, and building component libraries. Students create responsive websites and learn modern web design principles.",
                    "duration": "6 weeks",
                    "level": "Beginner to Intermediate",
                    "skills": ["Semantic HTML5", "CSS Grid", "Flexbox", "Responsive design", "CSS animations", "Sass", "Accessibility", "Performance optimization"],
                    "projects": ["Responsive portfolio", "Landing page", "CSS component library", "Animated website", "Mobile-first design"],
                    "career_paths": ["Frontend Developer", "Web Designer", "UI Developer", "Web Developer", "UX Developer"],
                    "learning_objectives": [
                        "Create semantic and accessible HTML5 markup following best practices",
                        "Build responsive layouts using CSS Grid and Flexbox effectively",
                        "Implement modern CSS features including custom properties and animations",
                        "Optimize web performance and ensure cross-browser compatibility",
                        "Design mobile-first responsive websites that work across all devices",
                        "Build reusable CSS component libraries using preprocessors"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["html5_semantics", "css_basics", "selectors", "box_model", "positioning"],
                            "percentage": 40
                        },
                        "intermediate": {
                            "topics": ["flexbox", "grid", "responsive_design", "animations", "sass"],
                            "percentage": 45
                        },
                        "advanced": {
                            "topics": ["custom_properties", "performance", "accessibility", "component_libraries"],
                            "percentage": 15
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "HTML5 and Semantic Markup",
                            "weight": 0.25,
                            "topics": ["semantic_elements", "accessibility", "forms", "multimedia", "microdata"]
                        },
                        {
                            "area": "Modern CSS Layout",
                            "weight": 0.35,
                            "topics": ["flexbox", "grid", "positioning", "responsive_design", "media_queries"]
                        },
                        {
                            "area": "Advanced CSS Features",
                            "weight": 0.25,
                            "topics": ["animations", "transitions", "custom_properties", "calc", "sass"]
                        },
                        {
                            "area": "Web Standards and Performance",
                            "weight": 0.15,
                            "topics": ["accessibility", "performance", "browser_compatibility", "optimization"]
                        }
                    ],
                    "prerequisites": [],
                    "assessment_focus": {
                        "conceptual": 0.3,
                        "practical": 0.6,
                        "problem_solving": 0.1
                    }
                }
            ]
        },
        {
            "name": "Data Science & Analytics",
            "courses": [
                {
                    "name": "Data Science with Python",
                    "description": "Learn data analysis, visualization, and machine learning using Python libraries. This comprehensive course covers the entire data science workflow from data collection to model deployment. Students master essential libraries including NumPy, Pandas, Matplotlib, Seaborn, and Scikit-learn. The course includes statistical analysis, data cleaning techniques, exploratory data analysis, and feature engineering. Advanced topics cover machine learning algorithms, model evaluation, and deploying models with Flask. Students work on real-world datasets and complete a capstone project analyzing business data.",
                    "duration": "14 weeks",
                    "level": "Beginner to Intermediate",
                    "skills": ["Python for data science", "Pandas", "NumPy", "Data visualization", "Machine learning", "Statistical analysis", "Model deployment", "Jupyter notebooks"],
                    "projects": ["Sales data analysis", "Customer segmentation", "Predictive pricing model", "Business intelligence dashboard", "Machine learning pipeline"],
                    "career_paths": ["Data Scientist", "Data Analyst", "Business Intelligence Analyst", "Machine Learning Engineer", "Research Analyst"],
                    "learning_objectives": [
                        "Manipulate and analyze large datasets using Pandas and NumPy effectively",
                        "Create compelling data visualizations using Matplotlib and Seaborn",
                        "Apply statistical analysis techniques to extract insights from data",
                        "Build and evaluate machine learning models for predictive analytics",
                        "Clean and preprocess real-world messy data for analysis",
                        "Deploy data science models to production environments"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["python_basics", "pandas", "numpy", "basic_visualization", "descriptive_stats"],
                            "percentage": 35
                        },
                        "intermediate": {
                            "topics": ["data_cleaning", "eda", "statistical_analysis", "basic_ml", "advanced_visualization"],
                            "percentage": 45
                        },
                        "advanced": {
                            "topics": ["advanced_ml", "model_evaluation", "feature_engineering", "deployment"],
                            "percentage": 20
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Data Manipulation and Analysis",
                            "weight": 0.3,
                            "topics": ["pandas", "numpy", "data_cleaning", "data_transformation", "aggregation"]
                        },
                        {
                            "area": "Data Visualization and Exploration",
                            "weight": 0.25,
                            "topics": ["matplotlib", "seaborn", "plotly", "eda", "statistical_plots"]
                        },
                        {
                            "area": "Statistical Analysis",
                            "weight": 0.2,
                            "topics": ["descriptive_statistics", "inferential_statistics", "hypothesis_testing", "correlation"]
                        },
                        {
                            "area": "Machine Learning",
                            "weight": 0.25,
                            "topics": ["scikit_learn", "supervised_learning", "unsupervised_learning", "model_evaluation"]
                        }
                    ],
                    "prerequisites": ["Python fundamentals"],
                    "assessment_focus": {
                        "conceptual": 0.3,
                        "practical": 0.5,
                        "problem_solving": 0.2
                    }
                },
                {
                    "name": "Machine Learning Fundamentals",
                    "description": "Understand machine learning algorithms and implement them using scikit-learn and TensorFlow. This course provides a solid foundation in machine learning theory and practical implementation. Students learn supervised learning (regression, classification), unsupervised learning (clustering, dimensionality reduction), and basic deep learning concepts. The course covers model selection, cross-validation, hyperparameter tuning, and handling real-world data challenges. Advanced topics include ensemble methods, feature selection, and deploying ML models to production.",
                    "duration": "12 weeks",
                    "level": "Intermediate",
                    "skills": ["Machine learning algorithms", "Scikit-learn", "TensorFlow", "Model evaluation", "Feature engineering", "Hyperparameter tuning", "Model deployment"],
                    "projects": ["House price prediction", "Image classification", "Recommendation system", "Fraud detection model", "Time series forecasting"],
                    "career_paths": ["Machine Learning Engineer", "Data Scientist", "AI Researcher", "Analytics Consultant", "AI Developer"],
                    "learning_objectives": [
                        "Understand fundamental machine learning algorithms and their applications",
                        "Implement supervised and unsupervised learning models using scikit-learn",
                        "Evaluate model performance and select appropriate algorithms for problems",
                        "Engineer features and preprocess data for machine learning",
                        "Tune hyperparameters and optimize model performance",
                        "Deploy machine learning models to production environments"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["ml_concepts", "linear_regression", "classification", "model_evaluation"],
                            "percentage": 30
                        },
                        "intermediate": {
                            "topics": ["advanced_algorithms", "ensemble_methods", "feature_engineering", "cross_validation"],
                            "percentage": 50
                        },
                        "advanced": {
                            "topics": ["deep_learning_basics", "hyperparameter_tuning", "deployment", "mlops"],
                            "percentage": 20
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Supervised Learning",
                            "weight": 0.4,
                            "topics": ["regression", "classification", "tree_models", "ensemble_methods", "svm"]
                        },
                        {
                            "area": "Unsupervised Learning",
                            "weight": 0.25,
                            "topics": ["clustering", "dimensionality_reduction", "anomaly_detection"]
                        },
                        {
                            "area": "Model Development and Evaluation",
                            "weight": 0.25,
                            "topics": ["feature_engineering", "model_selection", "cross_validation", "metrics"]
                        },
                        {
                            "area": "Production ML",
                            "weight": 0.1,
                            "topics": ["model_deployment", "monitoring", "mlops", "scaling"]
                        }
                    ],
                    "prerequisites": ["Python programming", "Basic statistics", "Linear algebra basics"],
                    "assessment_focus": {
                        "conceptual": 0.35,
                        "practical": 0.45,
                        "problem_solving": 0.2
                    }
                },
                {
                    "name": "Deep Learning with TensorFlow",
                    "description": "Build neural networks and deep learning models for image and text analysis. This advanced course covers deep learning fundamentals including neural network architectures, backpropagation, and optimization techniques. Students learn to build convolutional neural networks for computer vision, recurrent neural networks for sequence data, and transformer models for natural language processing. The course includes practical projects using TensorFlow and Keras, model optimization techniques, and deploying deep learning models. Advanced topics cover GANs, transfer learning, and distributed training.",
                    "duration": "10 weeks",
                    "level": "Advanced",
                    "skills": ["Neural networks", "TensorFlow", "Keras", "Computer vision", "Natural language processing", "Transfer learning", "Model optimization"],
                    "projects": ["Image classification system", "Text sentiment analyzer", "Object detection model", "Language translation system", "Generative AI application"],
                    "career_paths": ["Deep Learning Engineer", "AI Researcher", "Computer Vision Engineer", "NLP Engineer", "ML Research Scientist"],
                    "learning_objectives": [
                        "Design and implement neural network architectures using TensorFlow/Keras",
                        "Build convolutional neural networks for computer vision applications",
                        "Develop recurrent and transformer models for natural language processing",
                        "Apply transfer learning and fine-tuning techniques effectively",
                        "Optimize deep learning models for performance and deployment",
                        "Implement generative models including GANs and autoencoders"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["neural_networks", "tensorflow_basics", "keras", "basic_cnn"],
                            "percentage": 25
                        },
                        "intermediate": {
                            "topics": ["advanced_cnn", "rnn", "lstm", "transfer_learning", "optimization"],
                            "percentage": 50
                        },
                        "advanced": {
                            "topics": ["transformers", "gans", "distributed_training", "production_deployment"],
                            "percentage": 25
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Neural Network Fundamentals",
                            "weight": 0.25,
                            "topics": ["perceptrons", "backpropagation", "activation_functions", "optimization", "regularization"]
                        },
                        {
                            "area": "Computer Vision",
                            "weight": 0.35,
                            "topics": ["cnn", "image_classification", "object_detection", "segmentation", "transfer_learning"]
                        },
                        {
                            "area": "Natural Language Processing",
                            "weight": 0.25,
                            "topics": ["rnn", "lstm", "transformers", "attention", "language_models"]
                        },
                        {
                            "area": "Advanced Deep Learning",
                            "weight": 0.15,
                            "topics": ["gans", "autoencoders", "distributed_training", "model_optimization"]
                        }
                    ],
                    "prerequisites": ["Machine Learning Fundamentals", "Python programming", "Linear algebra", "Calculus basics"],
                    "assessment_focus": {
                        "conceptual": 0.4,
                        "practical": 0.4,
                        "problem_solving": 0.2
                    }
                },
                {
                    "name": "Data Visualization with Tableau",
                    "description": "Create compelling data visualizations and dashboards using Tableau. This course covers data connection, data preparation, and creating various chart types in Tableau. Students learn advanced visualization techniques, calculated fields, parameters, and dashboard design principles. The course includes storytelling with data, interactive dashboards, and sharing visualizations. Advanced topics cover Tableau Server administration, custom SQL, and integrating with other data sources. Students complete projects creating business dashboards and data stories.",
                    "duration": "6 weeks",
                    "level": "Beginner to Intermediate",
                    "skills": ["Tableau Desktop", "Data visualization", "Dashboard design", "Data storytelling", "Calculated fields", "Parameters", "Data connections"],
                    "projects": ["Sales performance dashboard", "Customer analytics dashboard", "Financial reporting system", "Marketing campaign analysis", "Executive summary dashboard"],
                    "career_paths": ["Business Intelligence Analyst", "Data Analyst", "Tableau Developer", "Data Visualization Specialist", "Business Analyst"],
                    "learning_objectives": [
                        "Connect to various data sources and prepare data for visualization",
                        "Create effective visualizations using appropriate chart types and design principles",
                        "Build interactive dashboards with filters, parameters, and actions",
                        "Implement calculated fields and table calculations for advanced analysis",
                        "Design compelling data stories that communicate insights effectively",
                        "Deploy and share Tableau visualizations across organizations"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["tableau_interface", "basic_charts", "data_connections", "filters"],
                            "percentage": 40
                        },
                        "intermediate": {
                            "topics": ["calculated_fields", "parameters", "dashboard_design", "interactivity"],
                            "percentage": 45
                        },
                        "advanced": {
                            "topics": ["table_calculations", "advanced_analytics", "custom_sql", "performance_optimization"],
                            "percentage": 15
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Data Preparation and Connections",
                            "weight": 0.25,
                            "topics": ["data_sources", "data_interpreter", "joins", "unions", "data_blending"]
                        },
                        {
                            "area": "Visualization Design",
                            "weight": 0.35,
                            "topics": ["chart_types", "marks_card", "visual_best_practices", "color_theory", "formatting"]
                        },
                        {
                            "area": "Dashboard Development",
                            "weight": 0.25,
                            "topics": ["dashboard_layout", "interactivity", "actions", "filters", "parameters"]
                        },
                        {
                            "area": "Advanced Analytics",
                            "weight": 0.15,
                            "topics": ["calculated_fields", "table_calculations", "forecasting", "trend_analysis"]
                        }
                    ],
                    "prerequisites": ["Basic data analysis concepts"],
                    "assessment_focus": {
                        "conceptual": 0.25,
                        "practical": 0.65,
                        "problem_solving": 0.1
                    }
                },
                {
                    "name": "SQL for Data Analysis",
                    "description": "Master SQL queries and database operations for data analysis and reporting. This comprehensive course covers SQL fundamentals including SELECT statements, joins, subqueries, and window functions. Students learn advanced SQL techniques for data analysis, performance optimization, and working with different database systems. The course includes data modeling, stored procedures, and database administration basics. Practical projects involve analyzing real business datasets and creating automated reporting systems.",
                    "duration": "8 weeks",
                    "level": "Beginner to Intermediate",
                    "skills": ["SQL fundamentals", "Advanced queries", "Database design", "Performance optimization", "Data modeling", "Stored procedures", "Reporting"],
                    "projects": ["Sales analysis system", "Customer database design", "Automated reporting tool", "Data warehouse queries", "Performance optimization project"],
                    "career_paths": ["Data Analyst", "Database Developer", "Business Intelligence Developer", "Data Engineer", "Database Administrator"],
                    "learning_objectives": [
                        "Write complex SQL queries using joins, subqueries, and window functions",
                        "Design relational databases with proper normalization and indexing",
                        "Analyze business data using SQL aggregation and analytical functions",
                        "Optimize query performance and understand execution plans",
                        "Create automated reporting solutions using stored procedures",
                        "Work with different database systems and understand their differences"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["basic_select", "filtering", "sorting", "grouping", "basic_joins"],
                            "percentage": 35
                        },
                        "intermediate": {
                            "topics": ["advanced_joins", "subqueries", "window_functions", "cte", "data_modification"],
                            "percentage": 45
                        },
                        "advanced": {
                            "topics": ["performance_optimization", "stored_procedures", "database_design", "advanced_analytics"],
                            "percentage": 20
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "SQL Query Fundamentals",
                            "weight": 0.4,
                            "topics": ["select_statements", "joins", "filtering", "grouping", "sorting"]
                        },
                        {
                            "area": "Advanced SQL Techniques",
                            "weight": 0.35,
                            "topics": ["window_functions", "cte", "subqueries", "pivoting", "recursive_queries"]
                        },
                        {
                            "area": "Database Design and Modeling",
                            "weight": 0.15,
                            "topics": ["normalization", "relationships", "indexing", "constraints", "schema_design"]
                        },
                        {
                            "area": "Performance and Administration",
                            "weight": 0.1,
                            "topics": ["query_optimization", "execution_plans", "stored_procedures", "functions"]
                        }
                    ],
                    "prerequisites": ["Basic database concepts"],
                    "assessment_focus": {
                        "conceptual": 0.3,
                        "practical": 0.5,
                        "problem_solving": 0.2
                    }
                },
                {
                    "name": "Big Data Analytics with Spark",
                    "description": "Process large datasets using Apache Spark and distributed computing. This course covers big data fundamentals, Spark architecture, and distributed computing concepts. Students learn to use Spark SQL, DataFrames, and RDDs for data processing. The course includes machine learning with MLlib, stream processing with Spark Streaming, and deploying Spark applications on cloud platforms. Advanced topics cover performance tuning, cluster management, and integrating with big data ecosystems like Hadoop and Kafka.",
                    "duration": "10 weeks",
                    "level": "Advanced",
                    "skills": ["Apache Spark", "Distributed computing", "Spark SQL", "MLlib", "Stream processing", "Big data architecture", "Cloud deployment"],
                    "projects": ["Large-scale data processing pipeline", "Real-time analytics system", "Machine learning on big data", "ETL pipeline with Spark", "Distributed data processing"],
                    "career_paths": ["Big Data Engineer", "Data Engineer", "Spark Developer", "Data Architect", "Platform Engineer"],
                    "learning_objectives": [
                        "Understand distributed computing concepts and Spark architecture",
                        "Process large datasets efficiently using Spark DataFrames and RDDs",
                        "Implement machine learning pipelines using MLlib at scale",
                        "Build real-time data processing systems with Spark Streaming",
                        "Optimize Spark applications for performance and resource utilization",
                        "Deploy and manage Spark applications on cloud platforms"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["big_data_concepts", "spark_basics", "rdd", "dataframes", "spark_sql"],
                            "percentage": 30
                        },
                        "intermediate": {
                            "topics": ["mllib", "spark_streaming", "performance_tuning", "cluster_deployment"],
                            "percentage": 50
                        },
                        "advanced": {
                            "topics": ["advanced_optimization", "ecosystem_integration", "production_deployment", "monitoring"],
                            "percentage": 20
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Spark Core and SQL",
                            "weight": 0.35,
                            "topics": ["rdd", "dataframes", "datasets", "spark_sql", "catalyst_optimizer"]
                        },
                        {
                            "area": "Machine Learning and Analytics",
                            "weight": 0.25,
                            "topics": ["mllib", "ml_pipelines", "feature_engineering", "model_training"]
                        },
                        {
                            "area": "Stream Processing",
                            "weight": 0.2,
                            "topics": ["spark_streaming", "structured_streaming", "kafka_integration", "real_time_analytics"]
                        },
                        {
                            "area": "Performance and Deployment",
                            "weight": 0.2,
                            "topics": ["performance_tuning", "cluster_management", "resource_optimization", "monitoring"]
                        }
                    ],
                    "prerequisites": ["SQL knowledge", "Python or Scala programming", "Distributed systems basics"],
                    "assessment_focus": {
                        "conceptual": 0.35,
                        "practical": 0.45,
                        "problem_solving": 0.2
                    }
                }
            ]
        },
        {
            "name": "Cloud Computing",
            "courses": [
                {
                    "name": "AWS Cloud Practitioner",
                    "description": "Learn Amazon Web Services fundamentals and cloud computing concepts. This course covers AWS core services including EC2, S3, RDS, and Lambda. Students learn cloud architecture principles, security best practices, and cost optimization strategies. The course includes hands-on labs for deploying applications, managing infrastructure, and implementing monitoring solutions. Advanced topics cover auto-scaling, load balancing, and disaster recovery planning. Students prepare for the AWS Cloud Practitioner certification.",
                    "duration": "8 weeks",
                    "level": "Beginner",
                    "skills": ["AWS core services", "Cloud architecture", "Security", "Cost optimization", "Infrastructure management", "Monitoring", "Certification preparation"],
                    "projects": ["Web application deployment", "Database migration to cloud", "Serverless application", "Disaster recovery plan", "Cost optimization analysis"],
                    "career_paths": ["Cloud Engineer", "AWS Solutions Architect", "DevOps Engineer", "Cloud Consultant", "Systems Administrator"],
                    "learning_objectives": [
                        "Understand cloud computing concepts and AWS service portfolio",
                        "Deploy and manage applications using core AWS services",
                        "Implement security best practices and IAM policies",
                        "Design cost-effective cloud solutions with monitoring",
                        "Plan disaster recovery and backup strategies",
                        "Prepare for and pass the AWS Cloud Practitioner certification"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["cloud_concepts", "aws_overview", "ec2", "s3", "iam"],
                            "percentage": 45
                        },
                        "intermediate": {
                            "topics": ["vpc", "rds", "lambda", "cloudformation", "monitoring"],
                            "percentage": 40
                        },
                        "advanced": {
                            "topics": ["security_best_practices", "cost_optimization", "disaster_recovery", "certification_prep"],
                            "percentage": 15
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Core AWS Services",
                            "weight": 0.4,
                            "topics": ["ec2", "s3", "rds", "vpc", "lambda", "cloudformation"]
                        },
                        {
                            "area": "Security and Compliance",
                            "weight": 0.25,
                            "topics": ["iam", "security_groups", "encryption", "compliance", "shared_responsibility"]
                        },
                        {
                            "area": "Architecture and Design",
                            "weight": 0.2,
                            "topics": ["well_architected", "scalability", "reliability", "performance"]
                        },
                        {
                            "area": "Billing and Support",
                            "weight": 0.15,
                            "topics": ["pricing_models", "cost_optimization", "support_plans", "billing_dashboard"]
                        }
                    ],
                    "prerequisites": ["Basic IT knowledge"],
                    "assessment_focus": {
                        "conceptual": 0.5,
                        "practical": 0.35,
                        "problem_solving": 0.15
                    }
                },
                {
                    "name": "Microsoft Azure Fundamentals",
                    "description": "Master Microsoft Azure cloud services and deployment strategies. This comprehensive course covers Azure core services including virtual machines, storage, databases, and networking. Students learn Azure Active Directory, security features, and compliance frameworks. The course includes practical exercises for deploying applications, managing resources, and implementing DevOps practices. Advanced topics cover Azure Kubernetes Service, Azure Functions, and hybrid cloud scenarios.",
                    "duration": "8 weeks",
                    "level": "Beginner",
                    "skills": ["Azure services", "Azure Active Directory", "Security", "DevOps", "Kubernetes", "Serverless computing", "Hybrid cloud"],
                    "projects": ["Azure web app deployment", "Containerized application", "Azure DevOps pipeline", "Identity management system", "Hybrid cloud solution"],
                    "career_paths": ["Azure Developer", "Cloud Architect", "DevOps Engineer", "Azure Administrator", "Cloud Security Engineer"],
                    "learning_objectives": [
                        "Navigate Azure portal and manage Azure subscriptions and resources",
                        "Deploy virtual machines, storage accounts, and networking components",
                        "Implement identity and access management with Azure Active Directory",
                        "Build and deploy applications using Azure App Service and Functions",
                        "Set up CI/CD pipelines using Azure DevOps services",
                        "Design hybrid cloud solutions integrating on-premises and Azure"
                    ],
                    "difficulty_progression": {
                        "beginner": {
                            "topics": ["azure_fundamentals", "virtual_machines", "storage", "networking"],
                            "percentage": 40
                        },
                        "intermediate": {
                            "topics": ["app_services", "databases", "azure_ad", "devops"],
                            "percentage": 45
                        },
                        "advanced": {
                            "topics": ["kubernetes", "functions", "hybrid_cloud", "governance"],
                            "percentage": 15
                        }
                    },
                    "knowledge_areas": [
                        {
                            "area": "Core Azure Services",
                            "weight": 0.35,
                            "topics": ["compute", "storage", "networking", "databases", "app_services"]
                        },
                        {
                            "area": "Identity and Security",
                            "weight": 0.25,
                            "topics": ["azure_ad", "rbac", "key_vault", "security_center", "compliance"]
                        },
                        {
                            "area": "Development and DevOps",
                            "weight": 0.25,
                            "topics": ["azure_devops", "functions", "logic_apps", "api_management"]
                        },
                        {
                            "area": "Management and Governance",
                            "weight": 0.15,
                            "topics": ["resource_manager", "policies", "blueprints", "cost_management"]
                        }
                    ],
                    "prerequisites": ["Basic cloud concepts"],
                    "assessment_focus": {
                        "conceptual": 0.4,
                        "practical": 0.45,
                        "problem_solving": 0.15
                    }
                }
            ]
        }
    ]
}